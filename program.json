{"_id": "/program/e0350c5a-f324-11ec-b939-0242ac120033", "uri": "/program/e0350c5a-f324-11ec-b939-0242ac120033", "publisher": null, "level": "principiante", "rights": "Attribution-ShareAlike 4.0 International", "description": "Escribe el constructor de la clase Producto", "icon": "coffee", "author": "mariosky@gmail.com", "tags": ["completa", "csharp"], "image_url": null, "title": "Completa el programa", "type": "prog", "lang": "csharp", "external_url": "https://sfo2.digitaloceanspaces.com/evo/uno/autores/mario.jpg", "unit_test": "\npublic class ProductoTest\n{\n\n    [Fact]\n    public void Constructor()\n    {\n        Producto p = new Producto(1,\"p\",12.2m,2);\n        Assert.NotNull(p);\n    }\n\n\n    [Fact]\n    public void PrintTest()\n    {\n        Producto p = new Producto(1,\"p\",12.2m,2);\n        p.Imprime();\n\n        using (StringWriter sw = new StringWriter())\n        {\n            Console.SetOut(sw);\n\n\n            p.Imprime();\n\n        string expected = \"id:1 nombre:p precio:12.2\\n\";\n        Assert.Equal(expected, sw.ToString());\n        }\n\n    }\n\n}\n\n\n\n", "initial_code": "using System;\nusing System.IO;\n\npublic class Producto\n{\n   private int id;\n   private string nombre;\n   private decimal precio;\n   private int cantidad;\n\n   // Constructor aqu\u00ed\n\n\n\n   // Imprime()\n   public void Imprime()\n   {\n           Console.WriteLine(\"id:{0} nombre:{1} precio:{2}\", id, nombre, precio);\n   }\n                   \n}\n", "instructions": "<h3>Escribe el constructor</h3>\n<p>A la clase <code>Producto</code> le hace falta el constructor, queremos crear nuestros objetos de\nla siguiente manera: </p>\n<pre><code class=\"language-csharp\">   public class Program\n  {\n    static void Main()\n    {\n    Producto p = new Producto(1, &quot;Libro de Texto C# Avanzado&quot;, 730.20m, 2);\n    p.Imprime()\n\n    }\n  }\n</code></pre>\n<p>Agrega el constructor correspondiente, este debe tomar cuatro argumentos para\nestablecer el estado inicial del objeto.</p>", "reg_exp": ""}