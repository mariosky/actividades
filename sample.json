{"_id": "/program/r0350c5a-g324-11ec-b939-0242ac122003", "uri": "/program/r0350c5a-g324-11ec-b939-0242ac122003", "publisher": null, "level": "principiante", "rights": "Attribution-ShareAlike 4.0 International", "description": "Agrega una lista de actores a la clase Pelicula", "icon": "coffee", "author": "mariosky@gmail.com", "tags": ["frontpage", "csharp"], "image_url": null, "title": "IMDB Ejercicio 4", "type": "prog", "lang": "csharp", "unit_test": "public class UnitTest1\n    {\n       [Fact]\n        public void ImprimeActores()\n        {\n\n            Pelicula p1 = new Pelicula(\"La La Land\", 2016);\n            p1.AgregaActor(new Actor(\"Ryan Gosling\", 1980));\n            p1.AgregaActor(new Actor(\"Emma Stone\", 1988));\n\n            \n\n            \n\n            using (StringWriter s = new StringWriter())\n            {\n                Console.SetOut(s);\n                \n                p1.ImprimeActores();\n\n                var result = s.ToString().Trim().Replace(\"\\r\",\"\");\n                Assert.Equal(\"Ryan Gosling (1980)\\nEmma Stone (1988)\", result );\n            }\n        }\n    }\n\n", "initial_code": "using System;\nusing System.IO;\nusing System.Collections.Generic;\n\n    public class Pelicula\n    {\n        //Campos\n        private String titulo;\n        private Int16 a\u00f1o;\n        private String pa\u00eds;\n        private String director;\n        private List<Actor> actores = new List<Actor>();\n\n        //Constructores\n        public Pelicula()\n        {\n\n        } \n        public Pelicula(string titulo, Int16 a\u00f1o )\n        {\n            this.titulo = titulo;\n            this.a\u00f1o = a\u00f1o;\n        }\n        //M\u00e9todos\n        public String GetTitulo() => titulo;\n        public void SetTitulo(String titulo) => this.titulo = titulo;\n        public Int16 GetA\u00f1o() => a\u00f1o;\n        public void SetA\u00f1o(Int16 a\u00f1o) => this.a\u00f1o = a\u00f1o;\n\n        public void Imprime()\n        {\n            Console.WriteLine($\"{titulo} ({a\u00f1o})\");\n        }\n\n        public void AgregaActor(Actor a)\n        {\n\n        }\n\n        public void ImprimeActores()\n        {\n\n        }\n\n    }\n\n    public class Actor\n    {\n        //Propiedades\n\n        //Constructores\n        public Actor(String nombre, Int16 a\u00f1o){\n\n        } \n\n        //M\u00e9todos \n        public void Imprime()\n        {\n            Console.WriteLine($\"{Nombre} ({A\u00f1o})\");\n        }\n    }\n", "instructions": "<h2>Actores</h2>\n<p>Agrega a tu clase <strong>Pelicula</strong> un campo privado <strong>actores</strong> de tipo <strong>List<Actor></strong>. \nLa clase Actor debe tener las siguientes propiedades: </p>\n<table>\n<thead>\n<tr>\n<th>Propiedad</th>\n<th>tipo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Nombre</td>\n<td>String</td>\n</tr>\n<tr>\n<td>A\u00f1o</td>\n<td>Int16</td>\n</tr>\n</tbody>\n</table>\n<p>Tus clases <code>Pelicula</code> y <code>Actor</code> deben permitir el siguiente funcionamiento:</p>\n<p>```csharp\nclass Program \n{\n    static void Main(){</p>\n<pre><code>    Pelicula p1 = new Pelicula(\"La La Land\", 2016);\n    p1.AgregaActor(new Actor(\"Ryan Gosling\", 1980));\n    p1.AgregaActor(new Actor(\"Emma Stone\", 1988));\n\n    p1.ImprimeActores();\n }\n</code></pre>\n<p>} </p>", "reg_exp": ""}