{"_id": "/activity/7330df52-0b40-11e7-9249-0401663b8331", "publisher": null, "level": "principiante", "rights": "Attribution-ShareAlike 4.0 International", "description": "Se explica el concepto de clase en c#", "icon": "file,", "author": "mariosky@gmail.com", "tags": ["clase", "csharp"], "image_url": null, "title": "Definci\u00f3n de Clase", "type": "text", "external_url": "https://sfo2.digitaloceanspaces.com/evo/uno/autores/mario.jpg", "author_image": "https://sfo2.digitaloceanspaces.com/evo/uno/autores/mario.jpg", "content": "<h2>Constructores</h2>\n<p>Cuando creamos un objeto, debemos establecer cual ser\u00e1 su estado inicial. Recordemos que\nel estado inicial de un objeto est\u00e1 dado por los valores actuales de sus propiedades.</p>\n<h3>Sintaxis para crear un constructor</h3>\n<p>Un constructor <em>el nombre est\u00e1 dado por el de la clase.</em></p>\n<pre><code class=\"language-python\">def foo(a, b):\n  return a + b\n\ndef to_json(activity_type, path):\n    activity = {}\n    with open('{path}activity.yml'.format(path=path)) as yaml_file:\n        activity = yaml.safe_load(yaml_file)\n\n    for file in activity_types[activity_type]:\n        files = glob.glob('{path}{file}*'.format(path=path, file=file))\n        print(files)\n        for f in files:\n            with open(f) as md_file:\n                activity_md = md_file.read()\n                if file in markdown_files:\n                    activity_md = markdown.markdown(activity_md,\n                                                    extensions=['fenced_code'])\n                                                                # , 'codehilite'])\n                    print(activity_md)\n                activity[file] = activity_md\n\n    json_activity = json.dumps(activity)\n    return json_activity\n\n</code></pre>\n<pre><code class=\"language-csharp\">class Clase \n{\n  int campo;\n}\n</code></pre>\n<pre><code>class Clase \n{\n  int campo;\n}\n</code></pre>"}